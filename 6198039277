-- Cyber City Tycoon By Nova

-- Library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/NovaTemplar/ScriptSlayers/main/source')))()
local Player = game.Players.LocalPlayer
local Window = OrionLib:MakeWindow({Name = "Kyro - By Nova", IntroText = "Kyro", HidePremium = false, SaveConfig = false, ConfigFolder = "ScriptSlayers"})

OrionLib:MakeNotification({
    Name = "You logged in",
    Content = "You logged in as "..Player.Name..".",
    Image = "rbxassetid://14836421904",
    Time = 5
})

-- Inf Money Tab
local InfMoneyTab = Window:MakeTab({
    Name = "Inf Money",
    Icon = "rbxassetid://", -- Replace with your icon ID
    PremiumOnly = false
})

-- Teleport Tab
local TeleportTab = Window:MakeTab({
    Name = "Teleport",
    Icon = "rbxassetid://14854526909", -- Replace with your icon ID
    PremiumOnly = false
})

local TeleportSection = TeleportTab:AddSection({
    Name = "Teleport Section"
})

local OtherTab = Window:MakeTab({
    Name = "Other's",
    Icon = "rbxassetid://14950644041",
    PremiumOnly = false
})

local OtherSection = OtherTab:AddSection({
    Name = "Others Section"
})

local SettingTab = Window:MakeTab({
    Name = "Settings",
    Icon = "rbxassetid://14950642126",
    PremiumOnly = false
})

local SettingSection = SettingTab:AddSection({
    Name = "Settings Section"
})

OtherTab:AddButton({
    Name = "Admin Cmd",
    Callback = function()
        loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'), true))()
    end
})

OtherTab:AddButton({
    Name = "SimpleSpy",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/78n/SimpleSpy/main/SimpleSpySource.lua"))()
    end
})

SettingTab:AddButton({
    Name = "Exit",
    Callback = function()
        OrionLib:Destroy()
    end
})

-- Function to teleport your player to another player's location
local function teleportToPlayer(playerName)
    -- Find the player by their name (case insensitive search).
    local targetPlayer = game.Players:FindFirstChild(playerName, true)

    -- Check if the target player exists.
    if targetPlayer then
        -- Get the target player's character and humanoid root part.
        local targetCharacter = targetPlayer.Character
        local targetHumanoidRootPart = targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart")

        -- Check if the target player's character and humanoid root part exist.
        if targetCharacter and targetHumanoidRootPart then
            -- Teleport your player to the target player's position.
            game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(targetHumanoidRootPart.CFrame)
        else
            warn("Target player does not have a valid character.")
        end
    else
        warn("Player not found.")
    end
end

local playerTextBox

local function teleportPlayer()
    local playerName = playerTextBox

    local matchingPlayers = {}
    local players = game.Players:GetPlayers()

    -- Find players whose usernames contain the specified name
    for _, player in pairs(players) do
        if string.find(player.Name:lower(), playerName:lower()) then
            table.insert(matchingPlayers, player)
        end
    end

    if #matchingPlayers == 0 then
        -- No matching players found, send an error notification
        OrionLib:MakeNotification({
            Name = "Player Not Found",
            Content = "No player found with a similar username.",
            Image = "rbxassetid://14836421904",
            Time = 5
        })
    elseif #matchingPlayers > 1 then
        -- Multiple matching players found, send an error notification
        OrionLib:MakeNotification({
            Name = "Multiple Matches Found",
            Content = "Multiple players found with similar usernames. Be more specific.",
            Image = "rbxassetid://14836421904",
            Time = 5
        })
    else
        -- One player found, initiate teleportation
        local targetPlayer = matchingPlayers[1]

        -- Send a notification about teleportation initiation
        OrionLib:MakeNotification({
            Name = "Teleporting...",
            Content = "Teleporting to " .. targetPlayer.Name .. "...",
            Image = "rbxassetid://14836421904",
            Time = 2
        })

        -- Teleport your player to the target player's position
        teleportToPlayer(targetPlayer.Name)

        -- Send a notification about successful teleportation
        OrionLib:MakeNotification({
            Name = "Teleport Successful",
            Content = "Successfully teleported to " .. targetPlayer.Name .. ".",
            Image = "rbxassetid://14836421904",
            Time = 5
        })
    end
end

TeleportSection:AddTextbox({
    Name = "Player Name",
    Default = "",
    TextDisappear = false,
    Callback = function(Value)
        playerTextBox = Value
    end
})

local teleportButton = TeleportSection:AddButton({
    Name = "Teleport",
    Callback = function()
        teleportPlayer()
    end
})

local RemovePopUpToggle
local InfMoneyToggle

local function enableRemovePopUp()
    -- Enable the code to remove PopUp
    local rs = game:GetService("RunService")
    local popUpConnection

    popUpConnection = game.Players.LocalPlayer.PlayerGui.OnScreen.Stats.Pstat.ChildAdded:Connect(function(v)
        if v.Name == "PopUp" then
            rs.RenderStepped:wait()
            v:Destroy()
        end
    end)

    -- Store the connection so we can disconnect it when the toggle is turned off
    RemovePopUpToggle.Connection = popUpConnection
end

local function disableRemovePopUp()
    -- Disable the code to remove PopUp
    if RemovePopUpToggle and RemovePopUpToggle.Connection then
        RemovePopUpToggle.Connection:Disconnect()
        RemovePopUpToggle.Connection = nil
    end
end

local function enableInfMoney()
    -- Enable the code to fire the robbery server every 0.01 seconds
    local rs = game:GetService("RunService")
    local InfMoneyTimer
    InfMoneyTimer = rs.RenderStepped:Connect(function()
        game.ReplicatedStorage.RE.Robbery:FireServer()
    end)

    -- Store the timer so we can disconnect it when the toggle is turned off
    InfMoneyToggle.Timer = InfMoneyTimer
end

local function disableInfMoney()
    -- Disable the code to fire the robbery server
    if InfMoneyToggle and InfMoneyToggle.Timer then
        InfMoneyToggle.Timer:Disconnect()
        InfMoneyToggle.Timer = nil
    end
end

RemovePopUpToggle = InfMoneyTab:AddToggle({
    Name = "Remove PopUp",
    Default = false, -- Set the default state to off
    Callback = function(Value)
        if Value then
            enableRemovePopUp()
        else
            disableRemovePopUp()
        end
    end
})

InfMoneyToggle = InfMoneyTab:AddToggle({
    Name = "Inf Money",
    Default = false, -- Set the default state to off
    Callback = function(Value)
        if Value then
            enableInfMoney()
        else
            disableInfMoney()
        end
    end
})

-- Initialize OrionLib
OrionLib:Init()
